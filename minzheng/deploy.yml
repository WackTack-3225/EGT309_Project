# Define the Namespace
apiVersion: v1
kind: Namespace # abstraction layer to prevent pods from being build in base env to prevent accidental errors
metadata:
  name: ml-app

---

apiVersion: v1
kind: ConfigMap # useful tool to allow easier access & modification of URL/File paths 
metadata:
  name: flask-url
  namespace: ml-app
data:
  DP_POD_URL: "http://processing-service:84/start-processing" # WORKING
  MODEL_TRAINING_URL: "http://model-training-service:82/train" # SET TO CORRECT (?)
  RESULT_URL: "http://model-training-service:82/results" # SET TO CORRECT(?)
  INF_POD_URL: "http://inference-service:83/predict" # WORKING

---
# Flask App Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: ml-app
spec:
  replicas: 3 # MAX 3 containers deployed
  selector:
    matchLabels:
      chapter: flask # Applies configuration to containers w/ label flask
  strategy:
    type: RollingUpdate # Deploy/Remove/Update pods based on specs below
    rollingUpdate:
      maxUnavailable: 1 # max 1 pod unavail at a time
      maxSurge: 1 # max 1 extra pod avail at a time
  template:
    metadata:
      labels:
        chapter: flask # create from a temaplate (image) and apply label flask for svc to connect
    spec:
      containers:
      - name: flask-container
        image: edysontan/flask-app # pull from flask-app image
        env: # to get Config map variables
        - name: DP_POD_URL
          valueFrom:
            configMapKeyRef:
              name: flask-url
              key: DP_POD_URL
        - name: MODEL_TRAINING_URL
          valueFrom:
            configMapKeyRef:
              name: flask-url
              key: MODEL_TRAINING_URL
        - name: RESULT_URL
          valueFrom:
            configMapKeyRef:
              name: flask-url
              key: RESULT_URL
        - name: INF_POD_URL
          valueFrom:
            configMapKeyRef:
              name: flask-url
              key: INF_POD_URL
        ports:
        - containerPort: 5000 # set port 5000, same as app.py

---
# Flask app service
apiVersion: v1
kind: Service
metadata:
  name: flask-app-service
  namespace: ml-app # deploy in same namespace to access
  labels:
    chapter: flask # unique calling method to ensure service operates on this specific chapter
spec:
  type: NodePort  # LoadBalancer for external
  ports:
  - protocol: TCP
    port: 5000  # Exposed port
    targetPort: 5000  # Flask app port inside the container
    nodePort: 30005
  selector:
    chapter: flask # applies to selected chapter: flask
